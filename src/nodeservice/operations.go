package nodeservice

import (
	"github.com/pkg/errors"
	"fmt"
)

var OperationNames = []string {
	"transfer_operation",
	"limit_order_create_operation",
	"limit_order_cancel_operation",
	"call_order_update_operation",
	"fill_order_operation",         
	"account_create_operation",
	"account_update_operation",
	"account_whitelist_operation",
	"account_upgrade_operation",
	"account_transfer_operation",
	"account_bind_operation",
	"account_unbind_operation",
	"account_multisig_create_operation",
	"asset_create_operation",
	"asset_update_operation",
	"asset_update_bitasset_operation",
	"asset_update_feed_producers_operation",
	"asset_issue_operation",
	"asset_reserve_operation",
	"asset_fund_fee_pool_operation",
	"asset_settle_operation",
	"asset_global_settle_operation",
	"asset_publish_feed_operation",
	"normal_asset_publish_feed_operation",
	"miner_create_operation",
	"witness_update_operation",
	"miner_generate_multi_asset_operation",
	"miner_merge_signatures_operation",
	"proposal_create_operation",
	"proposal_update_operation",
	"proposal_delete_operation",
	"withdraw_permission_create_operation",
	"withdraw_permission_update_operation",
	"withdraw_permission_claim_operation",
	"withdraw_permission_delete_operation",
	"guard_member_create_operation",
	"guard_member_update_operation",
	"committee_member_update_global_parameters_operation",
	"guard_member_resign_operation",
	"vesting_balance_create_operation",
	"vesting_balance_withdraw_operation",
	"worker_create_operation",
	"custom_operation",
	"assert_operation",
	"balance_claim_operation",
	"override_transfer_operation",
	"asset_transfer_from_cold_to_hot_operation",
	"sign_multisig_asset_operation",
	"transfer_to_blind_operation",
	"blind_transfer_operation",
	"transfer_from_blind_operation",
	"asset_settle_cancel_operation",  
	"asset_claim_fees_operation",
	"fba_distribute_operation",        
	"committee_member_execute_coin_destory_operation",
	"lockbalance_operation",
	"foreclose_balance_operation",
	"guard_lock_balance_operation",
	"guard_foreclose_balance_operation",
	"guard_refund_balance_operation",
	"crosschain_record_operation",
	"crosschain_withdraw_operation",
	"crosschain_withdraw_without_sign_operation",
	"crosschain_withdraw_with_sign_operation",
	"crosschain_withdraw_combine_sign_operation",
	"crosschain_withdraw_result_operation",
	"coldhot_transfer_operation",
	"coldhot_transfer_without_sign_operation",
	"coldhot_transfer_with_sign_operation",
	"coldhot_transfer_combine_sign_operation",
	"coldhot_transfer_result_operation",
	"coldhot_cancel_transafer_transaction_operation",
	"coldhot_cancel_uncombined_trx_operaion",
	"pay_back_operation",
	"guard_update_multi_account_operation",
	"asset_real_create_operation",
	"contract_register_operation",
	"contract_upgrade_operation",
	"native_contract_register_operation",
	"contract_invoke_operation",
	"storage_operation",
	"transfer_contract_operation",
	"contract_transfer_fee_proposal_operation",
	"gurantee_create_operation",
	"gurantee_cancel_operation",
	"guard_refund_crosschain_trx_operation",
	"publisher_appointed_operation",
	"asset_fee_modification_operation",
	"bonus_operation",
	"set_guard_lockbalance_operation",
	"publisher_canceled_operation",
	"senator_determine_withdraw_deposit_operation",
	"account_create_multisignature_address_operation",
	"senator_determine_block_payment_operation",
	"graphene::chain::eth_seri_guard_sign_operation",
	"eth_series_multi_sol_create_operation",
	"eth_multi_account_create_record_operation",
	"eths_multi_sol_guard_sign_operation",
	"eths_guard_sign_final_operation",
	"asset_eth_create_operation",
	"eths_coldhot_guard_sign_final_operation",
	"referendum_create_operation",
	"citizen_referendum_senator_operation",
	"referendum_update_operation",
	"referendum_accelerate_pledge_operation",
	"block_address_operation",
	"cancel_address_block_operation",
	"eth_cancel_fail_crosschain_trx_operation",
	"eth_cancel_coldhot_fail_trx_operaion",
	"eths_guard_change_signer_operation",
	"eths_guard_coldhot_change_signer_operation",
	"coldhot_cancel_combined_trx_operaion",
	"guard_cancel_combine_trx_operation",
	"senator_pass_success_trx_operation",
	"coldhot_pass_combine_trx_operation",
	"senator_change_eth_gas_price_operation",
	"eths_cancel_unsigned_transaction_operation",
	"senator_change_acquire_trx_operation",
	"add_whiteOperation_list_operation",
	"cancel_whiteOperation_list_operation",
	"set_balance_operation",
	"correct_chain_data_operation",
	"vote_create_operation",
	"vote_update_operation",
	"undertaker_operation",
	"name_transfer_operation"
}

func GetOperationNameByOperationType(operationType int) (string, error) {
	if operationType >= 0 && operationType < len(OperationNames) {
		return OperationNames[operationType], nil
	}
	return "", errors.New("not supported operation type")
}

func GetOperationTableNameByOperationName(operationName string) string {
	return fmt.Sprintf("tbl_%s", operationName)
}
